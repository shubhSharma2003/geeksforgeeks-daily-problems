class Solution{
    static int solve(String a, String b) {
        int x = a.length();
        int y = b.length();
        int[][] dp = new int[x + 1][y + 1];
        
        for (int i = x - 1; i >= 0; i--) {
            for (int j = y - 1; j >= 0; j--) {
                if (a.charAt(i) == b.charAt(j)) {
                    dp[i][j] = 1 + dp[i + 1][j + 1];
                } else {
                    dp[i][j] = Math.max(dp[i + 1][j], dp[i][j + 1]);
                }
            }
        }
        
        return dp[0][0];
    }
    
    static int lps(String str) {
        String rev = new StringBuilder(str).reverse().toString();
        return solve(str, rev);
    }
    static int countMin(String str)
    {
        // code here
        int lpsVal = lps(str);
        int n = str.length();
        
        return n - lpsVal;
    }
}
